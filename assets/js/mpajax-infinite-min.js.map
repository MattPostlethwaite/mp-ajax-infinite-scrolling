{"version":3,"sources":["mpajax-infinite.js"],"names":["$","setupPage","content","loadPrevPageMessage","prevPageNum","addClass","pageNum","prepend","$window","scrollTop","window","scrollTo","attr","directURL","placeholderClassName_Prev","length","before","loadMoreButtonHTML","loadButtonClassName_Prev","messageHTML","placeholderHTML","prevPageURL","nextPageNum","maxPageNum","placeholderClassName_Next","append","nextPageURL","loadButtonClassName_Next","remove","rebuildURL","oldURL","pageStr","query","newURL","_typeof","search","replace","mostylVisible","element","amountVisible","plus","scrollPosition","windowHeight","height","sectionData","section_name","section_url","scrolledAmount","each","self","this","sectionTop","offset","top","Math","round","updateURL","history","replaceState","windowHeightHalf","sectionEl","visibleSectionURL","lastVisibleSectionURL","location","href","loadNextPage","$lastLoadedSection","last","lastLoadedSectionTop","hasClass","loadContent","updateLoadButton","loadPrevPage","$topLoadedSection","topLoadedSectionTop","buttonClass","text","disabled","html","removeClass","url","placeholder","loadingDirection","placeholderClassName","loadingDirectionButton","loadButtonClassName","loadingButtonText","loadSpinnerHtml","loadErrorMessageClassName","load","responseText","textStatus","xhr","readyState","contentLoadError","contentLoadSuccessful","direction","topLoadedSectionHeight","loadingButton","loadErrorMessageClassName_Direction","status","refreshDirtyItems","dirtyItems","i","dirtyItem","$dirtyItem","itemURL","parents","data","snapbackCacheInit","snapbackCache","SnapbackCache","bodySelector","nextPageOffset","nextURL","prevURL","nextNum","prevNum","refreshItems","on","e","cachedPage","loadingCache","document","cachePage","checkForPageCache","SSPageCache","sessionStorage","pageCache","JSON","parse","mpAjaxInfinite","click","preventDefault","pageYOffset","documentElement","lastScrollTop","loadButtonWrapperClassName","$totalPageCount","parseInt","mpajax","startPage","isNaN","maxPages","Number","number","dataURL","classes","buttonText","message","messageClass","jQuery"],"mappings":"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","file":"mpajax-infinite-min.js","sourcesContent":["/**\n *\n * @name mpajax-infinite\n * @file Adds infinite scrolling to paged archives\n * @author Matt Postlethwaite\n *\n * @version 1.0.0\n *\n */\n\n\n( function( $ ) {\n\n\t/* ==========================\n\t * Set Constant Variables\n\t * ========================== */\n\n\t// URL related const\n\tconst directURL = window.location.href; // Directly accessed page link\n\tconst search = window.location.search; // Get the search\n\n\t// Load button related const\n\tconst loadButtonClassName = 'mpajax-load-button'; // Set id for load more button\n\tconst loadButtonWrapperClassName = loadButtonClassName + '-wrapper'; // Set id for load more button\n\tconst loadButtonClassName_Prev = loadButtonClassName + '-prev'; // Set id for load more button\n\tconst loadButtonClassName_Next = loadButtonClassName +'-next'; // Set id for load more button\n\n\t// Placeholder button related const\n\tconst placeholderClassName = 'mpajax-placeholder'; // Define the placeholder class\n\tconst placeholderClassName_Prev = placeholderClassName + '-prev'; // Define the placeholder class\n\tconst placeholderClassName_Next = placeholderClassName + '-next'; // Define the placeholder class\n\n\t// Load related const\n\tconst loadSpinnerHtml = '<i class=\"fa fa-spinner fa-pulse fa-fw\" style=\"width: 14px; height: 14px;\"></i>';\n\tconst loadErrorMessageClassName = 'mpajax-loading-error-message';\n\n\t// Number related const\n\tconst $totalPageCount = $('.total-page-count');\n\tconst pageNum = parseInt(mpajax.startPage); // Current page number\n\tconst maxPageNum = $totalPageCount.length !== 0 && !isNaN($totalPageCount.html()) ? Number($totalPageCount.html()) : parseInt(mpajax.maxPages); // Use max pages or override with total page count element\n\n\t// Other const\n\tconst $window = $(window);\n\n\n\t/* ==========================\n\t * Set Let Variables\n\t * ========================== */\n\t// Page related let\n\tlet prevPageNum = pageNum - 1; // Store prev page number = current page number - 1\n\tlet nextPageNum = pageNum + 1; // Store next page number = current page number + 1\n\tlet prevPageURL = mpajax.prevPageURL; // The URL of the prev page of posts.\n\tlet nextPageURL = mpajax.nextPageURL; // The URL of the next page of posts.\n\n\t// Section related let\n\tlet lastVisibleSectionURL = '';\n\n\t// Other let\n\tlet lastScrollTop = 0;\n\tlet loadingCache = false;\n\n\n\t// =========================================\n\t// Functions\n\t// =========================================\n\n\t/**\n\t *\n\t * @function placeholderHTML()\n\t * @description Html for the placeholder element\n\t * Placeholders are used to load response data into\n\t * @since 1.0.0\n\t *\n\t * @param {int} number - Page number for the placeholder id and data-section-name\n\t * @param {string} dataURL - The URL for the data request\n\t * @param {string} [classes] - Additional classes for this placeholder\n\t *\n\t * @returns {string} placeholder element html\n\t *\n\t */\n\tconst placeholderHTML = function(number, dataURL, classes) {\n\t\treturn '<div id=\"mpajax-content-' + number + '\" class=\"' + placeholderClassName + ' ' + classes + '\" data-section-name=\"mpajax-content-wrapper-page-'+ number +'\" data-section-url=\"' + dataURL + '\"></div>';\n\t};\n\n\n\t/**\n\t *\n\t * @function loadMoreButtonHTML()\n\t * @description Html for the load more button\n\t * @since 1.0.0\n\t *\n\t * @param {int} number - Page number for the placeholder\n\t *\n\t * @returns {string} Load more button\n\t *\n\t */\n\tconst loadMoreButtonHTML = function(buttonText, buttonClass) {\n\t\treturn '<div class=\"' + loadButtonWrapperClassName + ' ' + buttonClass + '-wrapper\" class=\"clearfix\"><button class=\"button ' + loadButtonClassName + ' ' + buttonClass + '\">' + buttonText + '</button></div>';\n\t};\n\n\n\t/**\n\t *\n\t * @function messageHTML()\n\t * @description Html for a message element\n\t * @since 1.0.0\n\t *\n\t * @param {string} message - The text for the message element\n\t * @param {string} [messageClass] - The class for the message element\n\t *\n\t * @returns {string} Load more button\n\t *\n\t */\n\tconst messageHTML = function(message, messageClass) {\n\t\treturn '<div class=\"mpajax-message ' + messageClass + '\"><p>' + message + '</p></div>';\n\t}\n\n\n\t/**\n\t *\n\t * @function setupPage()\n\t * @description Initialise everything needed for ajax to work\n\t * @since 1.0.0\n\t *\n\t * @param {id/class} content - The element to add the loaded content to\n\t *\n\t */\n\tfunction setupPage(content) {\n\n\t\tconst loadPrevPageMessage = prevPageNum > 1 ? 'Scroll up to load the previous pages' : 'Scroll up to load the previous page';\n\n\t\t// Add html class\n\t\t$('html').addClass('mpajax');\n\n\t\t// Was another page other than the first page loaded?\n\t\tif( pageNum != 1 ) {\n\n\t\t\t$('body').prepend('<div class=\"mpajax-spacer\" style=\"height: 10px\"></div>'); // Add spacer\n\n\t\t\t// Check if we are at the top of the document\n\t\t\tif( $window.scrollTop() == 0 ) {\n\t\t\t\twindow.scrollTo(0, 10); // Scroll down to hide the empty space and so user can scroll up\n\t\t\t}\n\n\t\t}\n\n\t\t// Get current page content wrapper ready\n\t\t$(content + ' .cards')\n\t\t\t.attr('id', 'mpajax-content-' + pageNum)\n\t\t\t.addClass('mpajax-content-wrapper loaded')\n\t\t\t.attr('data-section-name', 'mpajax-content-wrapper-page-' + pageNum)\n\t\t\t.attr('data-section-url', directURL);\n\n\t\t// Add prev page loading elements if we have a prev page and we don't already have a placeholder\n\t\tif(prevPageNum !== 0 && $('.' + placeholderClassName_Prev).length === 0)\n\t\t\t$(content + ' .mpajax-content-wrapper.loaded:first').before(\n\t\t\t\tloadMoreButtonHTML('Load Previous', loadButtonClassName_Prev) + '\\n' +\n\t\t\t\tmessageHTML(loadPrevPageMessage, 'load-previous-message') + '\\n' +\n\t\t\t\tplaceholderHTML(prevPageNum, prevPageURL, placeholderClassName_Prev)\n\t\t\t);\n\n\t\t// Add next page loading elements if not last page and we don't already have a placeholder\n\t\tif(nextPageNum <= maxPageNum && $('.' + placeholderClassName_Next).length === 0)\n\t\t\t$(content).append(\n\t\t\t\tplaceholderHTML(nextPageNum, nextPageURL, placeholderClassName_Next) + '\\n' +\n\t\t\t\tloadMoreButtonHTML('Load More', loadButtonClassName_Next)\n\t\t\t);\n\n\t\t// Remove unnecessary elements - (pagination and results count)\n\t\t$('.module-pagination, .woocommerce-pagination, .results-count, .woocommerce-result-count').remove();\n\n\t}\n\n\n\t/**\n\t *\n\t * @function rebuildURL()\n\t * @description Builds page urls\n\t * @since 1.0.0\n\t *\n\t * @param {string} oldURL - The url to change - full url\n\t * @param {string} [pageStr = false] - The new page url part - page/{n}/\n\t * @param {string} [query = (const)search] - The search query string\n\t *\n\t * @returns {string} newURL - The new URL\n\t *\n\t */\n\tfunction rebuildURL(oldURL, pageStr, query) {\n\n\t\tlet newURL = oldURL;\n\t\tpageStr = typeof(pageStr) === typeof('string') ? pageStr : false;\n\t\tquery = typeof(query) === typeof('string') ? query : search;\n\n\t\tif( pageStr ) {\n\t\t\tnewURL = newURL.replace(/page\\/[0-9]*\\//, pageStr ); // Replace old page number with the new page number\n\t\t}\n\n\t\tnewURL = newURL.replace(/\\?(.*)/, query); // Replace the search query\n\n\t\treturn newURL;\n\t}\n\n\t/**\n\t *\n\t * @function mostylVisible()\n\t * @description Checks to see which section is most visible in the viewport\n\t * @since 1.0.0\n\t *\n\t * @param {id/class} element - The element to track\n\t * @param {int} [amountVisible] - The amount of the element that should be visible - relative to the bottom of the window\n\t * @param {boolean} [plus=false] - Whether to add the amountVisible rather than take it away\n\t *\n\t * @returns {object} sectionData - Section url and name\n\t *\n\t */\n\tfunction mostylVisible(element, amountVisible, plus) {\n\n\t\tconst scrollPosition = $window.scrollTop();\n\t\tconst windowHeight = $window.height();\n\t\tconst sectionData = {section_name: '', section_url: ''};\n\t\tlet scrolledAmount = scrollPosition + windowHeight;\n\n\t\t// Check if amountVisible is an int\n\t\tif(typeof(amountVisible) === typeof(1)) {\n\n\t\t\t// Check if plus is a boolean\n\t\t\tif(typeof(plus) !== typeof(true)) {\n\t\t\t\tplus = false; // Set to false\n\t\t\t}\n\n\t\t\t// Plus or Minus?\n\t\t\tif(plus) {\n\t\t\t\tscrolledAmount = scrolledAmount + amountVisible;\n\t\t\t} else {\n\t\t\t\tscrolledAmount = scrolledAmount - amountVisible;\n\t\t\t}\n\t\t}\n\n\t\t$(element).each( function() {\n\t\t\tconst self = $(this);\n\t\t\tconst sectionTop = self.offset().top;\n\n\t\t\t// Check if top of element is less than scrolled amount\n\t\t\tif( Math.round(sectionTop) < Math.round(scrolledAmount) ) {\n\n\t\t\t\t// Set section url from data attribute\n\t\t\t\tsectionData.section_url = self.attr('data-section-url');\n\n\t\t\t\t// Set section name from data attribute\n\t\t\t\tsectionData.section_name = self.attr('data-section-name');\n\n\t\t\t}\n\t\t});\n\n\t\treturn sectionData;\n\t}\n\n\n\t/**\n\t *\n\t * @function updateURL()\n\t * @description Updates the url when the placeholder section is more than half way into the viewport\n\t * @since 1.0.0\n\t *\n\t */\n\tfunction updateURL() {\n\t\t// IE only supports replaceState() in v10 and above, so don't bother if those conditions aren't met.\n\t\tif ( ! window.history.replaceState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar windowHeightHalf = Math.round( ($window.height() / 2) );\n\t\tvar sectionEl = '.mpajax-content-wrapper';\n\t\tvar visibleSectionURL = mostylVisible(sectionEl, windowHeightHalf)['section_url']; // Check which section is visible\n\n\t\tif( visibleSectionURL != '' && visibleSectionURL != lastVisibleSectionURL ) {\n\n\t\t\t// Update history state\n\t\t\tif ( window.location.href != visibleSectionURL ) {\n\t\t\t\thistory.replaceState( null, null, visibleSectionURL );\n\t\t\t}\n\n\t\t\tlastVisibleSectionURL = visibleSectionURL;\n\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @function scrollLoadNextPage()\n\t * @description Loads the content from the next page as the user scrolls down\n\t * @since 1.0.0\n\t *\n\t */\n\tfunction loadNextPage() {\n\n\t\tconst windowHeight = $window.height();\n\t\tconst $lastLoadedSection = $('.mpajax-content-wrapper.loaded').last();\n\t\tconst lastLoadedSectionTop = $lastLoadedSection.offset().top;\n\n\t\tif ( Math.round($window.scrollTop() + windowHeight) > Math.round(lastLoadedSectionTop) ) {\n\n\t\t\t// Are there more pages to load?\n\t\t\tif( !$('body').hasClass('loading') && nextPageNum <= maxPageNum ) {\n\t\t\t\tloadContent('#content .cards', nextPageURL, '.' + placeholderClassName_Next); // Load the next page content\n\t\t\t}\n\n\t\t\tif(nextPageNum > maxPageNum) {\n\t\t\t\tupdateLoadButton('.' + loadButtonClassName_Next, 'No more to load', true);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t/**\n\t *\n\t * @function scrollLoadPrevPage()\n\t * @description Loads the content from the previous page as the user scrolls up\n\t * @since 1.0.0\n\t *\n\t */\n\tfunction loadPrevPage() {\n\n\t\tconst $topLoadedSection = $('.mpajax-content-wrapper.loaded:first');\n\t\tconst topLoadedSectionTop = $topLoadedSection.offset().top;\n\n\t\tif ( $window.scrollTop() < topLoadedSectionTop ) {\n\n\t\t\t// Are there previous pages to load?\n\t\t\tif( !$('body').hasClass('loading') && prevPageNum > 0 ) {\n\t\t\t\tloadContent('#content .cards', prevPageURL, '.mpajax-placeholder-prev'); // Load the next page content\n\t\t\t}\n\n\t\t\t$('.mpajax-spacer').remove();\n\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @function updateLoadButton()\n\t * @description Updates the load button text and state\n\t * @since 1.0.0\n\t *\n\t * @param {string} buttonClass - The class of the button to update\n\t * @param {string} text - The text for the updated button\n\t * @param {boolean} disabled - Whether the button should be disabled\n\t *\n\t */\n\tfunction updateLoadButton( buttonClass, text, disabled ) {\n\t\t$(buttonClass).html(text);\n\n\t\tif(disabled) {\n\t\t\t$(buttonClass).addClass('disabled');\n\t\t} else {\n\t\t\t$(buttonClass).removeClass('disabled');\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @function loadContent()\n\t * @description Loads the content\n\t * @since 1.0.0\n\t *\n\t * @param {id/class} content - The content load\n\t * @param {string} url - The url for the load request\n\t * @param {id/class} placeholder - The placeholder to add the loaded content to\n\t *\n\t */\n\tfunction loadContent(content, url, placeholder) {\n\n\t\tconst loadingDirection = placeholder.replace('.' + placeholderClassName + '-' , '');\n\t\tconst loadingDirectionButton = '.' + loadButtonClassName + '-' + loadingDirection;\n\t\tconst loadingButtonText = loadingDirection === 'next' ? 'Load More': 'Load Previous';\n\n\t\t// Add .loading to body for checking if ajax already running\n\t\t$('body').addClass('loading');\n\n\t\t// Show that we're working.\n\t\tupdateLoadButton(loadingDirectionButton, 'Loading more ' + loadSpinnerHtml, true);\n\n\t\t// Remove any loading errors for this direction\n\t\t$('.' + loadErrorMessageClassName + '-' + loadingDirection).remove();\n\n\t\t// Load the content\n\t\t$(placeholder).load( url + ' ' + content,\n\t\t\tfunction(responseText, textStatus, xhr) {\n\n\t\t\t\t// Handle errors\n\t\t\t\tif (xhr.readyState == 4 && textStatus == \"error\") {\n\t\t\t\t\tcontentLoadError(xhr, loadingDirection);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Change the placeholder into a content wrapper\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass('mpajax-placeholder ' + placeholder.replace('.', ''))\n\t\t\t\t\t.addClass('mpajax-content-wrapper loaded');\n\n\t\t\t\t// Set up for ext ajax call depending on the loading direction\n\t\t\t\tcontentLoadSuccessful(loadingDirection);\n\n\t\t\t\t// Return button to load more state ready for if user needs to click it\n\t\t\t\tupdateLoadButton(loadingDirectionButton, loadingButtonText, false);\n\n\t\t\t\t// Remove the loading class\n\t\t\t\t$('body').removeClass('loading');\n\n\t\t\t}\n\t\t);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t *\n\t * @function contentLoadSuccessful()\n\t * @description Runs after a successful .load() and sets up the page ready for the next load\n\t * @since 1.0.0\n\t *\n\t * @param {string} direction - The direction of the loaded content (Should be either 'next' or 'prev')\n\t *\n\t */\n\tfunction contentLoadSuccessful(direction) {\n\t\tif(direction === 'next') {\n\n\t\t\tnextPageNum++; // Increase next page number\n\n\t\t\tnextPageURL = rebuildURL(nextPageURL, 'page/' + nextPageNum + '/'); // Update next page link\n\n\t\t\t// Add a new placeholder, for when function runs again.\n\t\t\tif(nextPageNum <= maxPageNum && $(placeholderClassName_Next).length === 0) {\n\t\t\t\t$('.' + loadButtonClassName_Next + '-wrapper').before( placeholderHTML(nextPageNum,  nextPageURL, placeholderClassName_Next) );\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst topLoadedSectionHeight = $('.mpajax-content-wrapper.loaded:first').height();\n\t\t\twindow.scrollTo(0, $window.scrollTop() + topLoadedSectionHeight); // Adjust scroll\n\n\t\t\tprevPageNum--;\n\t\t\tprevPageURL = rebuildURL(prevPageURL, 'page/' + prevPageNum + '/'); // Update next page link\n\n\t\t\t// Add a new placeholder, for when function runs again.\n\t\t\tif(prevPageNum !== 0 && $('.' + placeholderClassName_Prev).length === 0) {\n\t\t\t\t$('.mpajax-content-wrapper.loaded:first').before( placeholderHTML(prevPageNum, prevPageURL, placeholderClassName_Prev) );\n\t\t\t}\n\n\t\t\t// We've loaded the first page so we don't need loading elements\n\t\t\tif(prevPageNum === 0) {\n\t\t\t\t$('.' + loadButtonClassName_Prev + '-wrapper, .load-previous-message' ).remove();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @function contentLoadError()\n\t * @description Runs after a successful .load() and sets up the page ready for the next load\n\t * @since 1.0.0\n\t *\n\t * @param {string} xhr - The xhr response from the ajax call\n\t * @param {string} direction - The direction of the loaded content (Should be either 'next' or 'prev')\n\t *\n\t */\n\tfunction contentLoadError(xhr, direction) {\n\n\t\tconst loadingButton = '.' + loadButtonClassName + '-' + direction;\n\t\tconst loadErrorMessageClassName_Direction = loadErrorMessageClassName + '-' + direction;\n\t\txhr.status = 504\n\t\tif( xhr.status == 404 ) {\n\t\t\t$(loadingButton).before( messageHTML('Sorry we are unable to find the page to load', loadErrorMessageClassName + ' ' + loadErrorMessageClassName_Direction) );\n\t\t\tupdateLoadButton(loadingButton, 'Unable to load', true);\n\t\t} else if ( xhr.status === 500 ) {\n\t\t\t$(loadingButton).before( messageHTML('Sorry something went wrong, please try clicking the load button', loadErrorMessageClassName + ' ' + loadErrorMessageClassName_Direction) );\n\t\t\tdirection == 'next' ? updateLoadButton(loadingButton, 'Load more') : updateLoadButton(loadingButton, 'Load previous');\n\t\t} else {\n\t\t\t$(loadingButton).before( messageHTML('Sorry something went wrong, please try refreshing the page', loadErrorMessageClassName + ' ' + loadErrorMessageClassName_Direction) );\n\t\t\tupdateLoadButton(loadingButton, 'Unable to load', true);\n\t\t}\n\n\t}\n\n\n\t/**\n\t *\n\t * @function refreshDirtyItems()\n\t * @description Refreshed items marked as dirty via ajax\n\t * @since 1.0.0\n\t *\n\t * @param {string} dirtyItems - An array of dirty items\n\t *\n\t */\n\tfunction refreshDirtyItems(dirtyItems) {\n\n\t\tfor(let i = 0; i < dirtyItems.length; i++) {\n\n\t\t\tconst dirtyItem = dirtyItems[i]\n\t\t\tconst $dirtyItem = $(dirtyItem)\n\t\t\tconst itemURL = $dirtyItem.parents('.mpajax-content-wrapper').data('section-url')\n\n\t\t\t// Return if dirty item isn't on this page\n\t\t\tif( !$dirtyItem.length )\n\t\t\t\treturn false\n\n\t\t\t// Load the content\n\t\t\t$dirtyItem.load( itemURL + ' #content .cards ' + dirtyItem + ' > *',\n\t\t\t\tfunction(responseText, textStatus, xhr) {\n\n\t\t\t\t\t// Handle errors\n\t\t\t\t\tif (xhr.readyState == 4 && textStatus == \"error\") {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @function snapbackCacheInit()\n\t * @description Initialises snapback_cache.js by highrisehq - https://github.com/highrisehq/snapback_cache\n\t * @since 1.0.0\n\t *\n\t */\n\tfunction snapbackCacheInit() {\n\n\t\t// Snapback settings\n\t\tconst snapbackCache = SnapbackCache({\n\t\t\tbodySelector: \"#content\",\n\t\t\tnextPageOffset: function () {\n\t\t\t\tconst pageOffset = {\n\t\t\t\t\tnextURL: nextPageURL,\n\t\t\t\t\tprevURL: prevPageURL,\n\t\t\t\t\tnextNum: nextPageNum,\n\t\t\t\t\tprevNum: prevPageNum\n\t\t\t\t}\n\t\t\t\treturn pageOffset;\n\t\t\t},\n\t\t\trefreshItems: function(dirtyItems) {\n\t\t\t\trefreshDirtyItems(dirtyItems)\n\t\t\t}\n\t\t});\n\n\n\t\t// When snapback cache has loaded\n\t\t$(\"#content\").on(\"snapback-cache:loaded\", function(e, cachedPage) {\n\n\t\t\t// Updates loading vars with the cached paged offsets\n\t\t\tnextPageURL = cachedPage.nextPageOffset.nextURL;\n\t\t\tnextPageNum = cachedPage.nextPageOffset.nextNum;\n\t\t\tprevPageURL = cachedPage.nextPageOffset.prevURL;\n\t\t\tprevPageNum = cachedPage.nextPageOffset.prevNum;\n\n\t\t\tloadingCache = false; // Reset so more pages can be loaded\n\t\t});\n\n\n\t\t// Cache page on content anchor click\n\t\t$(document).on(\"click\", \"a\", function () {\n\t\t\tsnapbackCache.cachePage();\n\t\t});\n\n\n\t\t// Check to see if we have a cache for this page\n\t\t(function checkForPageCache() {\n\n\t\t\tlet SSPageCache = sessionStorage.pageCache;\n\n\t\t\tif( SSPageCache ) {\n\t\t\t\tSSPageCache = JSON.parse(SSPageCache);\n\n\t\t\t\t// Check if to see if we don't have a pageCache for this page in the session storage before saving a new cache\n\t\t\t\tif( SSPageCache[window.location.href] ) {\n\t\t\t\t\tloadingCache = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t})();\n\n\t}\n\n\n\t/**\n\t *\n\t * @function mpAjaxInfinite()\n\t * @description Initialises everything!\n\t * @since 1.0.0\n\t *\n\t */\n\tfunction mpAjaxInfinite() {\n\n\t\t// Don't run anything unless body has .mpajax-init class\n\t\tif( !$('body').hasClass('mpajax-init') )\n\t\t\treturn false;\n\n\t\t$(document).on('ready', function() {\n\n\t\t\t// Set up the page structure ready for loading content\n\t\t\tsetupPage('#content');\n\n\t\t\tsnapbackCacheInit();\n\n\t\t\tif( !loadingCache ) {\n\n\t\t\t\t// Load prev page when the link is clicked.\n\t\t\t\t$('.' + loadButtonClassName_Prev).click(function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// Check if button is not disabled\n\t\t\t\t\t// Stops user making an ajax call when one is already running\n\t\t\t\t\tif( !$(this).hasClass('disabled') ) {\n\t\t\t\t\t\tloadContent('#content .cards', prevPageURL, '.mpajax-placeholder-prev'); // Load the prev page content\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Load next page when the link is clicked.\n\t\t\t\t$('.' + loadButtonClassName_Next).click(function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// Check if button is not disabled\n\t\t\t\t\t// Stops user making an ajax call when one is already running\n\t\t\t\t\tif( !$(this).hasClass('disabled') ) {\n\t\t\t\t\t\tloadContent('#content .cards', nextPageURL, '.mpajax-placeholder-next'); // Load the next page content\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t});\n\n\t\t// Handle scrolling\n\t\t$window.on('scroll', function() {\n\t\t\tif( !loadingCache ) {\n\n\t\t\t\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n\t\t\t\tupdateURL(); // Update the browser url\n\n\t\t\t\tif(scrollTop > lastScrollTop) { // Scrolling down\n\t\t\t\t\tlastScrollTop = scrollTop;\n\t\t\t\t\tloadNextPage();\n\t\t\t\t} else { // Scrolling up\n\t\t\t\t\tlastScrollTop = scrollTop;\n\t\t\t\t\tloadPrevPage();\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t}\n\tmpAjaxInfinite(); // Initialise mpajax infinite scrolling\n\n} )( jQuery );\n"]}